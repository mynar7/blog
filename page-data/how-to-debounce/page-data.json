{"componentChunkName":"component---src-templates-blog-post-js","path":"/how-to-debounce/","webpackCompilationHash":"d4dc398a381f86ba07bc","result":{"data":{"site":{"siteMetadata":{"title":"Strings and Things","author":"Lee Warrick"}},"mdx":{"id":"f778ebec-0f70-534a-a926-de65e8a5cad0","excerpt":"Have you ever heard the story of the QWERTY layout on a keyboard? The  popular legend  is that it was too easy to type if the letters were arranged alphabetically, and this causedâ€¦","frontmatter":{"title":"What are debounce and throttle functions, and how do you write them in JavaScript and React?","date":"October 17, 2019"},"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"What are debounce and throttle functions, and how do you write them in JavaScript and React?\",\n  \"date\": \"2019-10-17T12:00:00-0400\"\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, mdx(\"span\", _extends({\n    parentName: \"p\"\n  }, {\n    \"className\": \"gatsby-resp-image-wrapper\",\n    \"style\": {\n      \"position\": \"relative\",\n      \"display\": \"block\",\n      \"marginLeft\": \"auto\",\n      \"marginRight\": \"auto\",\n      \"maxWidth\": \"590px\"\n    }\n  }), \"\\n      \", mdx(\"a\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"gatsby-resp-image-link\",\n    \"href\": \"/blog/static/91985b102e11e1a9b8ac2de71cb5733e/c35de/typewriter.jpg\",\n    \"style\": {\n      \"display\": \"block\"\n    },\n    \"target\": \"_blank\",\n    \"rel\": [\"noopener\"]\n  }), \"\\n    \", mdx(\"span\", _extends({\n    parentName: \"a\"\n  }, {\n    \"className\": \"gatsby-resp-image-background-image\",\n    \"style\": {\n      \"paddingBottom\": \"75%\",\n      \"position\": \"relative\",\n      \"bottom\": \"0px\",\n      \"left\": \"0px\",\n      \"backgroundSize\": \"cover\",\n      \"display\": \"block\"\n    }\n  })), \"\\n  \", mdx(\"img\", _extends({\n    parentName: \"a\"\n  }, {\n    \"className\": \"gatsby-resp-image-image\",\n    \"alt\": \"Photo of Typewriter by Pereanu Sebastian\",\n    \"title\": \"Photo of Typewriter by Pereanu Sebastian\",\n    \"src\": \"/blog/static/91985b102e11e1a9b8ac2de71cb5733e/c739e/typewriter.jpg\",\n    \"srcSet\": [\"/blog/static/91985b102e11e1a9b8ac2de71cb5733e/8ee9c/typewriter.jpg 148w\", \"/blog/static/91985b102e11e1a9b8ac2de71cb5733e/ebbe7/typewriter.jpg 295w\", \"/blog/static/91985b102e11e1a9b8ac2de71cb5733e/c739e/typewriter.jpg 590w\", \"/blog/static/91985b102e11e1a9b8ac2de71cb5733e/5413e/typewriter.jpg 885w\", \"/blog/static/91985b102e11e1a9b8ac2de71cb5733e/4efde/typewriter.jpg 1180w\", \"/blog/static/91985b102e11e1a9b8ac2de71cb5733e/c35de/typewriter.jpg 1200w\"],\n    \"sizes\": \"(max-width: 590px) 100vw, 590px\"\n  })), \"\\n  \"), \"\\n    \")), mdx(\"p\", null, \"Have you ever heard the story of the QWERTY layout on a keyboard? The \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://en.wikipedia.org/wiki/Typewriter#QWERTY\"\n  }), \"popular legend\"), \" is that it was too easy to type if the letters were arranged alphabetically, and this caused mechanical typewriters to jam. The most common letters were too close together, supposedly. So to fix this, the QWERTY layout was invented, to \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"slow down the typist\"), \".\"), mdx(\"p\", null, \"This Dilbertian engineering idea is eerily similar to what a debounce function does.\"), mdx(\"h2\", null, \"What is a debounce?\"), mdx(\"p\", null, \"A debounce function is meant to slow down something in your application, typically a function call. The best way to wrap your head around this is by example.\"), mdx(\"p\", null, \"Consider this: you have a search input on your site somewhere, and \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"as the user types\"), \", you want to go fetch some search results to try and match what the user is looking for before they finish typing.\"), mdx(\"p\", null, mdx(\"em\", {\n    parentName: \"p\"\n  }, \"Piece of cake!\"), \", you think. With React, you can attach your API call to your input\\u2019s \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"onChange\"), \" event like so:\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-jsx\",\n    \"metastring\": \"react-live\",\n    \"react-live\": true\n  }), \"function SearchForm() {\\n  const [inputVal, setInputVal] = React.useState(\\\"\\\")\\n  const [callCount, setCallCount] = React.useState(0)\\n\\n  function handleChange(e) {\\n    setInputVal(e.target.value)\\n    // let's say this was an API call\\n    // to add auto-complete data\\n    setCallCount(callCount + 1)\\n  }\\n\\n  return (\\n    <div>\\n      <h2>Type in this Box \\u2B07\\uFE0F</h2>\\n      <input onChange={handleChange} value={inputVal}/>\\n      <p>Current Data: {inputVal}</p>\\n      <p>Calls Done: {callCount}</p>\\n    </div>\\n  )\\n}\\n\")), mdx(\"p\", null, \"Notice that as you type in the search box, if your API function is attached to your input\\u2019s \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"onChange\"), \" event, you\\u2019ll make an API call \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"every time the user presses a key\"), \" \\uD83D\\uDE31. If you couple this with the small delay it takes to make an API call, you can imagine the traffic jam that this would cause as you have multiple API calls being made and flooding back in.\"), mdx(\"p\", null, \"This isn\\u2019t what we imagined when we first cooked up this auto-populating search box scheme. What we \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"really\"), \" want to do is to make our API call when the user pauses or stops typing.\"), mdx(\"p\", null, \"This is the purpose of a \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"debounce\"), \" function, to limit the amount of calls that can happen in a given amount of time.\"), mdx(\"h2\", null, \"How to debounce a function in JavaScript\"), mdx(\"p\", null, \"So we need to fire fewer API calls, but how do we do it?\"), mdx(\"p\", null, \"Before we jump into React, let\\u2019s give this a shot with regular JavaScript. Let\\u2019s put our fake API call in its own function, then wrap it in our debounce function.\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\",\n    \"metastring\": \"js-live\",\n    \"js-live\": true\n  }), \"let callCount = 0\\n\\n// this is just a promise that resolves after 300ms\\n// and console logs a counter\\nfunction fakeAPICall() {\\n  return new Promise(resolve => {\\n    setTimeout(() => {\\n      callCount++\\n      console.log(\\\"Calls Made:\\\" + callCount)\\n      resolve()\\n    }, 300)\\n  })\\n}\\n\\nfakeAPICall() // 1\\nfakeAPICall() // 2\\nfakeAPICall() // 3\\n\\nfunction debounce(callback) {\\n    // each call to debounce creates a new timeoutId\\n    let timeoutId\\n    return function() {\\n      // this inner function keeps a reference to\\n      // timeoutId from the function outside of it\\n      clearTimeout(timeoutId)\\n      timeoutId = setTimeout(callback, 800)\\n    }\\n}\\n\\n// wraps the fakeAPICall function and returns\\n// a function that calls fakeAPICall\\nconst debouncedFakeApiCall = debounce(fakeAPICall)\\n\\n// all these calls cancel each other\\n// Until the last call finally happens after 800 ms\\ndebouncedFakeApiCall()\\ndebouncedFakeApiCall()\\ndebouncedFakeApiCall()\\ndebouncedFakeApiCall()\\ndebouncedFakeApiCall()\\ndebouncedFakeApiCall()\\ndebouncedFakeApiCall() // 4\\n\")), mdx(\"p\", null, \"Success!\"), mdx(\"p\", null, \"Without a debounce, we get 3 calls, but with a debounce, we only fire an API call \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"on the last function call\"), \".\"), mdx(\"h3\", null, \"How it works\"), mdx(\"p\", null, \"The most basic, critical piece of this debounce function is to delay the actual API call, then as more calls come in, cancel and reset the delay for the API call. We do this with \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"setTimeout\"), \" and \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"clearTimeout\"), \" in the JavaScript above.\"), mdx(\"p\", null, \"If you noticed the debounce function taking a function and returning a another function, that is an example of a closure in JavaScript. When we debounce a function, we pass our original function in, and wrap it in another function that delays calls to the original. In this way our debounce function is reusable throughout our program. We could debounce as many different functions as we want, \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"because each one has its own \", mdx(\"inlineCode\", {\n    parentName: \"strong\"\n  }, \"timeoutId\"), \" variable\"), \".\"), mdx(\"h2\", null, \"How to write a debounce function in React\"), mdx(\"p\", null, \"React allows us to encapsulate logic in components, so we can skip the fancy JavaScript closures and just use our component to write a debounce function.\"), mdx(\"p\", null, \"Let\\u2019s take a look:\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-jsx\",\n    \"metastring\": \"react-live use-render\",\n    \"react-live\": true,\n    \"use-render\": true\n  }), \"// just an async helper\\nfunction fakeAPICall() {\\n  return new Promise(resolve => {\\n    setTimeout(resolve, 300)\\n  })\\n}\\n\\nfunction SearchForm() {\\n  const [inputVal, setInputVal] = React.useState(\\\"\\\")\\n  const [query, setQuery] = React.useState(\\\"\\\")\\n  const inputRef = React.useRef(\\\"\\\")\\n  const [callCount, setCallCount] = React.useState(0)\\n  const timeoutId = React.useRef()\\n\\n  function handleChange(e) {\\n    setInputVal(e.target.value)\\n    // mimic the value so we can access\\n    // the latest value in our API call\\n    inputRef.current = e.target.value\\n  }\\n\\n  React.useEffect(() => {\\n    // if the user keeps typing, stop the API call!\\n    clearTimeout(timeoutId.current)\\n    // don't make an API call with no data\\n    if (!inputVal.trim()) return\\n    // capture the timeoutId so we can\\n    // stop the call if the user keeps typing\\n    timeoutId.current = setTimeout(() => {\\n      // grab our query, but store it in state so\\n      // I can show it to you below in the example \\uD83D\\uDE04\\n      setQuery(inputRef.current)\\n      fakeAPICall()\\n      // here we pass a callback so we get the current callCount value\\n      // from the useState hook's setter function\\n      // we use a Ref for timeoutId to avoid this same problem\\n      .then(() => setCallCount(callCount => callCount + 1))\\n    }, 800)\\n  }, [inputVal])\\n\\n  return (\\n    <div>\\n      <h2>Type in this Box \\u2B07\\uFE0F</h2>\\n      <input onChange={handleChange} value={inputVal}/>\\n      <p>Current Data: {inputVal}</p>\\n      <p>Query Sent: {query}</p>\\n      <p>Calls Done: {callCount}</p>\\n    </div>\\n  )\\n}\\n\\nrender(SearchForm)\\n\")), mdx(\"p\", null, \"Now as we type, the component won\\u2019t actually make any API calls until the typing stops.\"), mdx(\"p\", null, \"The only difference here is that instead of writing a closure, we\\u2019re using a React Ref for our \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"timeoutId\"), \". Refs are React\\u2019s version of instance variables, so each SearchForm component that we make should get its own \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"timeoutId\"), \". If you want to learn more about Refs and \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"useEffect\"), \", \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://leewarrick.com/blog/react-use-effect-explained/\"\n  }), \"I wrote another post on that topic\"), \".\"), mdx(\"h2\", null, \"What is a throttle?\"), mdx(\"p\", null, \"This might not be exactly what you imagined when you envisioned this functionality. For example, as you type into Google search, you still get autocomplete suggestions as you type, even if you haven\\u2019t stopped typing.\"), mdx(\"p\", null, \"So while our previous examples will ensure we do the \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"fewest\"), \" API calls possible, we may want to tweak our solution to \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"make an API call every so often as the user types\"), \". This would be a \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"throttle\"), \" function.\"), mdx(\"h2\", null, \"How to write a throttle in JavaScript\"), mdx(\"p\", null, \"Let\\u2019s tweak our JavaScript debounce implementation so that we only make our API call every 800ms.\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\",\n    \"metastring\": \"js-live\",\n    \"js-live\": true\n  }), \"let callCount = 0\\n\\nfunction fakeAPICall() {\\n  return new Promise(resolve => {\\n    setTimeout(() => {\\n      callCount++\\n      console.log(\\\"Calls Made:\\\" + callCount)\\n      resolve()\\n    }, 300)\\n  })\\n}\\n\\nfunction throttle(cb) {\\n    let makingCall\\n    return function() {\\n      // if I'm in progress of making an API call,\\n      // don't trigger another one\\n      if (makingCall) return\\n      // set up API call to fire\\n      makingCall = true\\n      // give the user some time to type by delaying the actual call\\n      setTimeout(() => {\\n        makingCall = false\\n        cb()\\n      }, 1000)\\n    }\\n}\\n\\nconst throttledFakeApiCall = throttle(fakeAPICall)\\n\\n// imagine the user starting and stopping typing\\n// we'll only make a call every 800ms\\nthrottledFakeApiCall() // 1\\nthrottledFakeApiCall()\\nthrottledFakeApiCall()\\nsetTimeout(() => {\\n  throttledFakeApiCall()\\n  throttledFakeApiCall()\\n}, 600)\\nsetTimeout(() => {\\n  throttledFakeApiCall() // 2\\n  throttledFakeApiCall()\\n}, 1200)\\nsetTimeout(() => {\\n  throttledFakeApiCall()\\n  throttledFakeApiCall()\\n}, 1800)\\nsetTimeout(() => {\\n  throttledFakeApiCall() // 3\\n  throttledFakeApiCall()\\n}, 2400)\\n\")), mdx(\"p\", null, \"Now as our throttle function fires, we are limiting our calls to happen every 800ms.\"), mdx(\"h3\", null, \"How it works\"), mdx(\"p\", null, \"This new version uses a simple \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"true\"), \"/\", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"false\"), \" value to determine if we should trigger more calls instead of clearing the timeout and cancelling previous calls. Now the first call to the throttled function tees up the call, and the subsequent calls are ignored until the API call is complete.\"), mdx(\"h2\", null, \"How to write a throttle in React\"), mdx(\"p\", null, \"Let\\u2019s apply this same functionality to our previous React example.\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-jsx\",\n    \"metastring\": \"react-live use-render\",\n    \"react-live\": true,\n    \"use-render\": true\n  }), \"// just an async helper\\nfunction fakeAPICall() {\\n  return new Promise(resolve => {\\n    setTimeout(resolve, 300)\\n  })\\n}\\n\\nfunction SearchForm() {\\n  const [inputVal, setInputVal] = React.useState(\\\"\\\")\\n  const [query, setQuery] = React.useState(\\\"\\\")\\n  const inputRef = React.useRef(\\\"\\\")\\n  const [callCount, setCallCount] = React.useState(0)\\n  const makingCall = React.useRef(false)\\n\\n  function handleChange(e) {\\n    setInputVal(e.target.value)\\n    // mimic the value so we can access\\n    // the latest value in our API call\\n    inputRef.current = e.target.value\\n  }\\n\\n  React.useEffect(() => {\\n    // if there's no value or we've already triggered a call\\n    // prevent further calls\\n    if (!inputVal.trim() || makingCall.current) return\\n    makingCall.current = true\\n    setTimeout(() => {\\n      // again, this setQuery is just so I can\\n      // render the query below.\\n      // if this API call were real, we'd probably\\n      // pass the query into the API call function\\n      setQuery(inputRef.current)\\n      fakeAPICall()\\n      .then(() => {\\n        setCallCount(callCount => callCount + 1)\\n        makingCall.current = false\\n      })\\n    }, 1000)\\n  }, [inputVal])\\n\\n  return (\\n    <div>\\n      <h2>Type in this Box \\u2B07\\uFE0F</h2>\\n      <input onChange={handleChange} value={inputVal}/>\\n      <p>Current Data: {inputVal}</p>\\n      <p>Query Sent: {query}</p>\\n      <p>Calls Done: {callCount}</p>\\n    </div>\\n  )\\n}\\n\\nrender(SearchForm)\\n\")), mdx(\"p\", null, \"Success! Now as the user types, every 800ms we make a call for an autocomplete suggestion. This means \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"more API calls, but better user experience\"), \", at least in the case of our search autocomplete example.\"), mdx(\"h2\", null, \"Parting Thoughts\"), mdx(\"p\", null, \"So there you have it: throttling and debounce functions in JS and React.\"), mdx(\"p\", null, \"But would you ever implement this yourself in real life?\"), mdx(\"p\", null, \"Sure! If you just needed simple functionality like this, you could absolutely manage your own debounce logic/helpers in your app. However, there\\u2019s no shame in pulling in Lodash and using the \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://lodash.com/docs/4.17.15#debounce\"\n  }), \"debounce\"), \" or \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://lodash.com/docs/4.17.15#throttle\"\n  }), \"throttle\"), \" functions that they\\u2019ve implemented.\"), mdx(\"p\", null, \"I find it fun to try and implement my own solutions, and I think it\\u2019s worth the mental gymnastics to give this stuff a shot in your own code every once in a while. But don\\u2019t be fooled, nobody will judge you if you reach for a third-party solution!\"));\n}\nMDXContent.isMDXComponent = true;"}},"pageContext":{"isCreatedByStatefulCreatePages":false,"slug":"/how-to-debounce/","previous":{"id":"5497b679-f4e1-53a1-a6e3-415d39ae7da7","fields":{"slug":"/angular-vs-react-vs-vue/"},"frontmatter":{"title":"Front-end Fisticuffs: Angular vs React vs Vue in 2019"},"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Front-end Fisticuffs: Angular vs React vs Vue in 2019\",\n  \"date\": \"2019-10-05T10:00:00-0400\"\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, mdx(\"span\", _extends({\n    parentName: \"p\"\n  }, {\n    \"className\": \"gatsby-resp-image-wrapper\",\n    \"style\": {\n      \"position\": \"relative\",\n      \"display\": \"block\",\n      \"marginLeft\": \"auto\",\n      \"marginRight\": \"auto\",\n      \"maxWidth\": \"590px\"\n    }\n  }), \"\\n      \", mdx(\"a\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"gatsby-resp-image-link\",\n    \"href\": \"/blog/static/5aca234f740d624418ae46972aae98c7/c35de/cowboy.jpg\",\n    \"style\": {\n      \"display\": \"block\"\n    },\n    \"target\": \"_blank\",\n    \"rel\": [\"noopener\"]\n  }), \"\\n    \", mdx(\"span\", _extends({\n    parentName: \"a\"\n  }, {\n    \"className\": \"gatsby-resp-image-background-image\",\n    \"style\": {\n      \"paddingBottom\": \"56.25%\",\n      \"position\": \"relative\",\n      \"bottom\": \"0px\",\n      \"left\": \"0px\",\n      \"backgroundSize\": \"cover\",\n      \"display\": \"block\"\n    }\n  })), \"\\n  \", mdx(\"img\", _extends({\n    parentName: \"a\"\n  }, {\n    \"className\": \"gatsby-resp-image-image\",\n    \"alt\": \"Cowboy riding horse and kicking up dirt by Lee Pigott\",\n    \"title\": \"Cowboy riding horse and kicking up dirt by Lee Pigott\",\n    \"src\": \"/blog/static/5aca234f740d624418ae46972aae98c7/c739e/cowboy.jpg\",\n    \"srcSet\": [\"/blog/static/5aca234f740d624418ae46972aae98c7/8ee9c/cowboy.jpg 148w\", \"/blog/static/5aca234f740d624418ae46972aae98c7/ebbe7/cowboy.jpg 295w\", \"/blog/static/5aca234f740d624418ae46972aae98c7/c739e/cowboy.jpg 590w\", \"/blog/static/5aca234f740d624418ae46972aae98c7/5413e/cowboy.jpg 885w\", \"/blog/static/5aca234f740d624418ae46972aae98c7/4efde/cowboy.jpg 1180w\", \"/blog/static/5aca234f740d624418ae46972aae98c7/c35de/cowboy.jpg 1200w\"],\n    \"sizes\": \"(max-width: 590px) 100vw, 590px\"\n  })), \"\\n  \"), \"\\n    \")), mdx(\"p\", null, \"Being a front-end developer is a bit like being a cowboy in a rodeo. As a developer, you\\u2019ll find yourself wrangling a new framework over and over because of the speed at which the front-end landscape evolves. Sure, learning comes with the territory as a developer, but front-end development in particular is becoming quite the skillset to maintain.\"), mdx(\"p\", null, \"The fact is, you\\u2019re likely going to need to know at least one if you\\u2019re going to become a web developer. Before we talk about choosing one to spend your time on, let\\u2019s first highlight the problems they solve.\"), mdx(\"h2\", null, \"Why use a framework?\"), mdx(\"p\", null, \"Three weeks into a boot camp, I was amazed with the things I could build with HTML/CSS/JS, including \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://leewarrick.com/rpg\"\n  }), \"a dice-roll based RPG for the browser.\")), mdx(\"p\", null, \"I\\u2019ve often wanted to make improvements to that game, but the thought of adding features or refactoring has held me back. The problem is, \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://github.com/mynar7/rpg/blob/master/assets/script.js\"\n  }), \"it\\u2019s written with a thousand lines of spaghetti jQuery.\"), \" I can only imagine the challenge of working on a project like a banking application before frameworks came onto the scene.\"), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Front-end frameworks are a response to the challenge of increased complexity and scale in web applications.\"), \" As we began making bigger web applications that do more and more for the user, we had to find a way to wrangle increasing amounts of logic, traffic, and code.\"), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Frameworks handle the problem of scope by separating code into components\"), \". A component can be purely visual, functional, or both. For the most part, JavaScript you write in a component is scoped to that component, providing isolation from other parts of the codebase. You don\\u2019t have to worry as much about conflicting code when using components. \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Components are also reusable\"), \", meaning you can accomplish more with less code.\"), mdx(\"p\", null, \"Frameworks have performance benefits over plain JavaScript or jQuery. Specifically, \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"frameworks optimize re-rendering\"), \", or in laymen\\u2019s terms, updating the page\\u2019s HTML. JavaScript\\u2019s DOM API (all the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"document.getElementById\"), \" stuff), is resource intensive for the browser. \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Frameworks increase performance by minimizing the actual changes to the HTML\"), \".\"), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Frameworks also help mitigate large amounts of traffic to a website.\"), \" Instead of having one server build a new HTML file for each user and request, we can simply send the entire app to each user and let the user\\u2019s browser handle re-rendering. This way the server only has to serve HTML/CSS/JS once, and can communicate to the browser with only data after that.\"), mdx(\"h3\", null, \"But\\u2026\"), mdx(\"p\", null, \"There\\u2019s a few downsides to frameworks. It\\u2019s more JavaScript for the browser to run, which can be costly in terms of load times when a user first visits your site. It\\u2019s also another layer of complexity for you to deal with as a developer, adding to your growing list of skills to maintain.\"), mdx(\"p\", null, \"If you\\u2019re building a static site like a business information page, you might not need a framework. But for complex applications like your banking website or the game I mentioned above, a framework can bring a lot to the table, albeit with its own costs.\"), mdx(\"h2\", null, \"The Big 3: Angular, React, and Vue\"), mdx(\"p\", null, mdx(\"span\", _extends({\n    parentName: \"p\"\n  }, {\n    \"className\": \"gatsby-resp-image-wrapper\",\n    \"style\": {\n      \"position\": \"relative\",\n      \"display\": \"block\",\n      \"marginLeft\": \"auto\",\n      \"marginRight\": \"auto\",\n      \"maxWidth\": \"590px\"\n    }\n  }), \"\\n      \", mdx(\"a\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"gatsby-resp-image-link\",\n    \"href\": \"/blog/static/3d7cb1773b4a5026fa0ee52622d6d1cb/c35de/threehorses.jpg\",\n    \"style\": {\n      \"display\": \"block\"\n    },\n    \"target\": \"_blank\",\n    \"rel\": [\"noopener\"]\n  }), \"\\n    \", mdx(\"span\", _extends({\n    parentName: \"a\"\n  }, {\n    \"className\": \"gatsby-resp-image-background-image\",\n    \"style\": {\n      \"paddingBottom\": \"66.66666666666666%\",\n      \"position\": \"relative\",\n      \"bottom\": \"0px\",\n      \"left\": \"0px\",\n      \"backgroundSize\": \"cover\",\n      \"display\": \"block\"\n    }\n  })), \"\\n  \", mdx(\"img\", _extends({\n    parentName: \"a\"\n  }, {\n    \"className\": \"gatsby-resp-image-image\",\n    \"alt\": \"Three Horses, Photo by Doruk Yemenici\",\n    \"title\": \"Three Horses, Photo by Doruk Yemenici\",\n    \"src\": \"/blog/static/3d7cb1773b4a5026fa0ee52622d6d1cb/c739e/threehorses.jpg\",\n    \"srcSet\": [\"/blog/static/3d7cb1773b4a5026fa0ee52622d6d1cb/8ee9c/threehorses.jpg 148w\", \"/blog/static/3d7cb1773b4a5026fa0ee52622d6d1cb/ebbe7/threehorses.jpg 295w\", \"/blog/static/3d7cb1773b4a5026fa0ee52622d6d1cb/c739e/threehorses.jpg 590w\", \"/blog/static/3d7cb1773b4a5026fa0ee52622d6d1cb/5413e/threehorses.jpg 885w\", \"/blog/static/3d7cb1773b4a5026fa0ee52622d6d1cb/4efde/threehorses.jpg 1180w\", \"/blog/static/3d7cb1773b4a5026fa0ee52622d6d1cb/c35de/threehorses.jpg 1200w\"],\n    \"sizes\": \"(max-width: 590px) 100vw, 590px\"\n  })), \"\\n  \"), \"\\n    \")), mdx(\"p\", null, \"Before we talk about picking a framework, let\\u2019s talk about the differences between them. As of 2019, there\\u2019s three big players in the JavaScript front-end framework game: Angular, React and Vue.\"), mdx(\"h3\", null, \"Angular\"), mdx(\"p\", null, \"Angular is a Google invention. It all started with AngularJS, which exploded onto the scene and saw widespread use. Then came React, and the Angular team rewrote the entire framework completely and called it Angular 2 (Then they skipped version 3 and went directly to 4 and we\\u2019re currently on version 7).\"), mdx(\"p\", null, \"Basically AngularJS and Angular 2+ are completely different beasts, and so a large amount of the AngularJS crowd switched to React when version 2 came out.\"), mdx(\"h4\", null, \"The Good\"), mdx(\"p\", null, \"Angular absolutely rocks for enterprise development. If you want to work for a big company, Angular is a fantastic choice. Angular is \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"batteries included\"), \", meaning it comes with its own packages and solutions for the common things you want to do. For example, if you want to make an API call, there\\u2019s a feature for that. Internationalization, Global State Management and other Angular libraries/features are all built and maintained by the Angular team.\"), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Angular is also the most opinionated of the Big 3.\"), \" And because of its opinionated nature, \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"most Angular projects look the same\"), \". When I say \\u201Copinionated\\u201D I mean that Angular has a particular method or way of doing what you want to accomplish. This means that once you learn it, you likely can work on any other Angular codebase with little effort.\"), mdx(\"h4\", null, \"The Bad\"), mdx(\"p\", null, \"Being opinionated is a double-edged sword. Yes, it means that everyone is probably doing something the same way, but remember that Angular was written by Google Engineers. So the \\u201CAngular Way\\u201D does not necessarily mean the easy way.\"), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"TypeScript is mandatory\"), \" in Angular, and \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"the Angular team loves RxJS\"), \", so that\\u2019s also rolled into the framework. NGRX, Angular\\u2019s state management library, makes Redux look lightweight by comparison. All this adds up to a \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"fairly steep learning curve for the novice developer.\")), mdx(\"p\", null, \"Angular also wraps its components in HTML elements in such a way that CSS is scoped by default. There\\u2019s no way to turn it off either. Because of this, it can be incredibly difficult to override a component\\u2019s CSS when you need to.\"), mdx(\"h4\", null, \"The Ugly\"), mdx(\"p\", null, \"Working with the module pattern in Angular is frustrating for beginners. Every component comes with an HTML, CSS, TypeScript, and Test file by default. You then have to register that component in a higher level module that tells Angular and TypeScript where it can find everything. The CLI has commands to generate a new component and auto-register it in a module because of how laborious it can be to do manually.\"), mdx(\"p\", null, \"If you\\u2019re still learning front-end development and you\\u2019re new to frameworks, \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Angular can feel like building a rocket launcher to swat a fly.\"), \" It\\u2019s honestly overkill for a small application, the type of which you need to build a lot of when learning.\"), mdx(\"p\", null, \"To boot, the documentation is not great, and the community is not as prolific as React or Vue\\u2019s. This means it\\u2019s harder to find solutions for your problems via Google, and there\\u2019s not many tutorials out there for you to learn from.\"), mdx(\"p\", null, \"That said, I recommend \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://ultimatecourses.com/author/toddmotto\"\n  }), \"Todd Motto\\u2019s courses\"), \" and the \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://www.youtube.com/channel/UCsBjURrPoezykLs9EqgamOA\"\n  }), \"Angular Firebase fellow on YouTube\"), \" if you\\u2019re hoping to learn Angular.\"), mdx(\"h3\", null, \"React\"), mdx(\"p\", null, \"React, created by Facebook, launched after AngularJS and quickly became the most popular front-end framework.\"), mdx(\"p\", null, \"If I had to put the React philosophy into words, I might say that \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"React wants to be as unobstrusive as possible and make you feel like you\\u2019re just working with JavaScript\"), \". React also highly values immutabililty and one-way data flow.\"), mdx(\"h4\", null, \"The Good\"), mdx(\"p\", null, \"Because of its popularity, \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"there are an absolute ton of resources to learn React.\"), \" You can hop onto Google or YouTube and easily find entire free courses for React. Any questions you may have about React have likely been answered and posted to Stack Overflow or some other forum.\"), mdx(\"p\", null, \"React\\u2019s popularity also means there is \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"plenty of 3rd party support\"), \". If you need any kind of pre-built solution for any aspect of a React project, someone has undoubtedly already built it and published it to NPM.\"), mdx(\"p\", null, \"React\\u2019s API is also very small, meaning there\\u2019s just not that much to it. \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Writing React is a lot like writing JavaScript\"), \", particularly with the new hooks API which emphasizes a \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"functional approach\"), \" to writing components. \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"This makes learning React beginner-friendly\"), \".\"), mdx(\"p\", null, \"The popularity of React also makes it a great skill for finding a job. Plenty of companies use React.\"), mdx(\"h4\", null, \"The Bad\"), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Because React is so small and un-opinionated, you\\u2019re going to have to bring in your own solutions for everything.\"), \" This means you may be using lots of 3rd party libraries to accomplish things that might come standard in Angular or Vue. For example, if you want to make an API call, you\\u2019ll probably use Axios or JS\\u2019s fetch. If you want global state management, you\\u2019re going to use Redux or some other solution, where Angular has NGRX and Vue has Vuex.\"), mdx(\"p\", null, \"Being a \\u201Cbring your own everything\\u201D framework, \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"one React project may look wildly different from another.\"), \" So just because you have worked with React at one company for a length of time, you might change jobs to another React-based team and find yourself on a strange and foreign codebase that you have to learn.\"), mdx(\"h4\", null, \"The Ugly\"), mdx(\"p\", null, \"Because it\\u2019s \\u201Cjust JavaScript\\u201D, \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"React will let you write a bunch of JavaScript and logic in your template.\"), \" This can make your code confusing and obtuse to other developers, and even yourself on a second pass. \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"It can be incredibly difficult to write JSX in a way that\\u2019s readable.\")), mdx(\"p\", null, \"React is un-opinionated, so you can absolutely turn it into a footgun and begin writing code that\\u2019s not performant and full of bugs. \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"It\\u2019s incredibly easy to write bad React code.\")), mdx(\"h3\", null, \"Vue\"), mdx(\"p\", null, \"Vue is the underdog, and everyone loves a good underdog. It\\u2019s written by Evan You, a former AngularJS team member. This the only one of the Big 3 not backed by a huge company in Silicon Valley.\"), mdx(\"h4\", null, \"The Good\"), mdx(\"p\", null, \"Vue\\u2019s API is \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"incredibly easy to learn\"), \". There\\u2019s plenty of stories of designers and developers that were turned-off or confused by Angular/React that gravitated towards Vue and loved it.\"), mdx(\"p\", null, \"Vue provides just enough opinion to keep your code readable and sane without making you feel like you\\u2019re jumping through hoops to use it. It also provides some excellent built-in solutions for common framework problems. For instance, state management is greatly simplifed through Vuex, Vue\\u2019s version of Redux/NGRX.\"), mdx(\"p\", null, \"There\\u2019s also a \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"good amount of community support\"), \"; there\\u2019s plenty of third party libraries and packages for Vue. There\\u2019s also plenty of tutorials and info to be found on Google for Vue. \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"And the official documentation is excellent.\")), mdx(\"p\", null, \"If you\\u2019re worried about jobs with Vue, it\\u2019s a valid concern. You\\u2019re probably not as likely to find a Vue job in the states as an Angular or React job. However, the PHP community loves Vue. \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Laravel ships with Vue, and so if you find a company writing PHP, you\\u2019re likely to also find them using Vue.\"), \" Vue is also huge in Asia likely because the documentation has been translated to Asian languages.\"), mdx(\"h4\", null, \"The Bad\"), mdx(\"p\", null, \"Sharing logic between components with Vue is currently a bit of a mess. \\u201CMixins\\u201D let you write logic that can be shared between components. They\\u2019re easy enough to use, but it can be devilish trying to figure out how mixins interact with a components logic. \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Mixins are terrible.\")), mdx(\"p\", null, \"Vue also doesn\\u2019t really play well with TypeScript currently, which is a concern for big codebases that could benefit from it.\"), mdx(\"p\", null, \"And as I noted above, you \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"might\"), \" have a harder time finding work in the West as a Vue dev than you would if you had learned React/Angular.\"), mdx(\"h4\", null, \"The \\u2026Uncertain\"), mdx(\"p\", null, \"Vue isn\\u2019t ugly. It\\u2019s \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"vuetiful\"), \".\"), mdx(\"p\", null, \"That said, Version 3 of Vue is coming, and it\\u2019s bringing a different API with it that mimics React hooks.\"), mdx(\"p\", null, \"Now, React hooks are \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"excellent\"), \", but it remains to be seen how well Vue hooks (or the Composition API) will be embraced by the community. Regardless, Vue 3 will be backwards compatible, so hooks will be opt-in.\"), mdx(\"p\", null, \"Having used React hooks, and having seen what Vue hooks are bringing to the table, I am excited to give them a try.\"), mdx(\"h3\", null, \"What about Ember, Svelte, Backbone, etc?\"), mdx(\"p\", null, \"There\\u2019s a lot of front-end frameworks out there that aren\\u2019t the big 3. Someone probably published a new one while you were reading this article. Here\\u2019s a few I didn\\u2019t mention:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"Ember\"), \" is another highly-opinionated framework, and while it\\u2019s not as popular, there are teams out there using it.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"Svelte\"), \" is so new that nobody is using it yet. The creator is brilliant, and this may blow up, so who knows?\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Nobody uses \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"backbone\"), \". Sorry backbone.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"Lit-HTML/Polymer\"), \" is an ultra-lightweight framework (like 30 lines of JS small or something). I don\\u2019t know of anyone using it.\")), mdx(\"h2\", null, \"Choosing a Framework\"), mdx(\"p\", null, mdx(\"span\", _extends({\n    parentName: \"p\"\n  }, {\n    \"className\": \"gatsby-resp-image-wrapper\",\n    \"style\": {\n      \"position\": \"relative\",\n      \"display\": \"block\",\n      \"marginLeft\": \"auto\",\n      \"marginRight\": \"auto\",\n      \"maxWidth\": \"590px\"\n    }\n  }), \"\\n      \", mdx(\"a\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"gatsby-resp-image-link\",\n    \"href\": \"/blog/static/ab0c4eb0f448243f0b817b9453ad1bd8/c35de/lanternrider.jpg\",\n    \"style\": {\n      \"display\": \"block\"\n    },\n    \"target\": \"_blank\",\n    \"rel\": [\"noopener\"]\n  }), \"\\n    \", mdx(\"span\", _extends({\n    parentName: \"a\"\n  }, {\n    \"className\": \"gatsby-resp-image-background-image\",\n    \"style\": {\n      \"paddingBottom\": \"66.66666666666666%\",\n      \"position\": \"relative\",\n      \"bottom\": \"0px\",\n      \"left\": \"0px\",\n      \"backgroundSize\": \"cover\",\n      \"display\": \"block\"\n    }\n  })), \"\\n  \", mdx(\"img\", _extends({\n    parentName: \"a\"\n  }, {\n    \"className\": \"gatsby-resp-image-image\",\n    \"alt\": \"Man riding a horse, lighting his path with a lanterm by Priscilla De Preez\",\n    \"title\": \"Man riding a horse, lighting his path with a lanterm by Priscilla De Preez\",\n    \"src\": \"/blog/static/ab0c4eb0f448243f0b817b9453ad1bd8/c739e/lanternrider.jpg\",\n    \"srcSet\": [\"/blog/static/ab0c4eb0f448243f0b817b9453ad1bd8/8ee9c/lanternrider.jpg 148w\", \"/blog/static/ab0c4eb0f448243f0b817b9453ad1bd8/ebbe7/lanternrider.jpg 295w\", \"/blog/static/ab0c4eb0f448243f0b817b9453ad1bd8/c739e/lanternrider.jpg 590w\", \"/blog/static/ab0c4eb0f448243f0b817b9453ad1bd8/5413e/lanternrider.jpg 885w\", \"/blog/static/ab0c4eb0f448243f0b817b9453ad1bd8/4efde/lanternrider.jpg 1180w\", \"/blog/static/ab0c4eb0f448243f0b817b9453ad1bd8/c35de/lanternrider.jpg 1200w\"],\n    \"sizes\": \"(max-width: 590px) 100vw, 590px\"\n  })), \"\\n  \"), \"\\n    \")), mdx(\"p\", null, \"Now that we\\u2019ve talked about the big 3, how do you pick one to learn?\"), mdx(\"p\", null, \"You\\u2019ll probably spend most of your time using one framework. A codebase is unlikely to pull in multiple frameworks, and as a developer you likely only have time to specialize in one framework at a time.\"), mdx(\"p\", null, \"The truth is: \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"it doesn\\u2019t really matter which framework you know, as long as you know one\"), \".\"), mdx(\"p\", null, \"All of these frameworks do the same thing. You write a template, variables and logic and they re-render the template based on those variables and logic.\"), mdx(\"p\", null, \"They all use webpack and babel, they all have build-steps and CLIs, and you can get the same apps written using all of them. \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"They\\u2019re all just HTML, CSS and JavaScript at the end of the day.\")), mdx(\"p\", null, \"Your skills in one will transfer to another, because you\\u2019re really learning web development before you\\u2019re learning Angular or React development.\"), mdx(\"p\", null, \"With that said, \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"choose the framework that aligns with your goals and preferences\"), \".\"), mdx(\"p\", null, \"If you want to move to Asia and work as a developer, Vue is a solid choice. Are you a Java developer or want to work at a big corporation? Angular might be best for you. Are you self-taught? Maybe React is the best choice simply for the amount of free tutorials that are available.\"), mdx(\"h2\", null, \"Parting Thoughts\"), mdx(\"p\", null, \"Learning the conventions and basics of a front-end framework is the hard part. \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Once you learn one, it becomes trivial to switch to another.\"), \" I learned React in a boot camp, got hired at a big company that used Angular, and then changed jobs to another that used Vue.\"), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Note\"), \": If you\\u2019re curious about how web development evolved from Geocities to React, I did \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://www.youtube.com/watch?v=-W2hZadx8fE\"\n  }), \"a brief talk on the history of web development and its current landscape.\")));\n}\nMDXContent.isMDXComponent = true;"},"next":null}}}