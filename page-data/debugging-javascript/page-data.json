{"componentChunkName":"component---src-templates-blog-post-js","path":"/debugging-javascript/","webpackCompilationHash":"94684459f74c054870ee","result":{"data":{"site":{"siteMetadata":{"title":"Strings and Things","author":"Lee Warrick"}},"mdx":{"id":"e4c11792-2f04-5396-99c7-25cbc5e4b5a3","excerpt":"","frontmatter":{"title":"Debugging JavaScript Quickly","date":"August 09, 2019"},"code":{"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Debugging JavaScript Quickly\",\n  \"date\": \"2019-08-09T23:00:00+0400\"\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\",\n    \"metastring\": \"js-live\",\n    \"js-live\": true\n  }), \"const user = {\\n    id: 101,\\n    email: 'jack@dev.com',\\n    personalInfo: {\\n        name: 'Jack',\\n        address: {\\n            line1: 'westwish st',\\n            line2: 'washmasher',\\n            city: 'wallas',\\n            state: 'WX'\\n        }\\n    }\\n}\\nconsole.log(user)\\n\")), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\",\n    \"metastring\": \"js-live\",\n    \"js-live\": true\n  }), \"const banana = \\\"meatloaf\\\"\\nconsole.log(banana)\\nconsole.log({puppy: \\\"bork\\\"}, {kitty: \\\"meowkens\\\"})\\n\")), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-html\",\n    \"metastring\": \"html-live\",\n    \"html-live\": true\n  }), \"<h2>Happy happy</h2>\\n\")), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\",\n    \"metastring\": \"react-live use-render\",\n    \"react-live\": true,\n    \"use-render\": true\n  }), \"function banana() {\\n    const h2 = document.getElementById('magic-h2')\\n    h2.textContent = \\\"banana\\\"\\n}\\n\\nrender(\\n    <div>\\n        <h2 id=\\\"magic-h2\\\">~Magical~</h2>\\n        <button onClick={banana}>Click me!</button>\\n    </div>\\n)\\n\")), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\",\n    \"metastring\": \"react-live\",\n    \"react-live\": true\n  }), \"function Counter() {\\n    const [count, setCount] = React.useState(0)\\n    function countUp(count) {\\n        const newCount = count + 1\\n        setCount(newCount)\\n    }\\n    return (\\n        <div>\\n            <h2>Count is {count}</h2>\\n            <button onClick={() => countUp(count)}>Increment</button>\\n        </div>\\n    )\\n}\\n\")));\n}\nMDXContent.isMDXComponent = true;"}}},"pageContext":{"isCreatedByStatefulCreatePages":false,"slug":"/debugging-javascript/","previous":{"id":"4770afc0-5bc4-5d17-ad41-36d64a399250","fields":{"slug":"/all-i-know-about-podcasting/"},"frontmatter":{"title":"The Ultimate Guide to Starting a Tech Podcast"},"code":{"scope":""}},"next":null}}}