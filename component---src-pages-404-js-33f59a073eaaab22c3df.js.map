{"version":3,"sources":["webpack:///./src/pages/404.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer.js","webpack:///./src/components/Layout.js","webpack:///./src/components/seo.js","webpack:///./.cache/public-page-renderer-prod.js"],"names":["NotFoundPage","render","react__WEBPACK_IMPORTED_MODULE_0___default","a","createElement","_components_Layout__WEBPACK_IMPORTED_MODULE_1__","location","this","props","_components_seo__WEBPACK_IMPORTED_MODULE_2__","title","React","Component","__webpack_require__","d","__webpack_exports__","StaticQuery","react__WEBPACK_IMPORTED_MODULE_0__","n","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","StaticQueryContext","createContext","StaticQueryDataRenderer","_ref","staticQueryData","data","query","finalData","Fragment","children","Consumer","propTypes","PropTypes","object","string","isRequired","func","m","module","exports","require","default","Layout","header","_this$props","__PATH_PREFIX__","pathname","react__WEBPACK_IMPORTED_MODULE_6___default","style","_objectSpread","scale","marginBottom","rhythm","marginTop","gatsby__WEBPACK_IMPORTED_MODULE_7__","boxShadow","textDecoration","color","to","className","display","justifyContent","flexWrap","Date","getFullYear","href","SEO","description","_ref$lang","lang","_ref$meta","meta","_ref$keywords","keywords","twitterImageUrl","twitterImageAltText","react__WEBPACK_IMPORTED_MODULE_1___default","gatsby__WEBPACK_IMPORTED_MODULE_4__","detailsQuery","metaDescription","site","siteMetadata","react_helmet__WEBPACK_IMPORTED_MODULE_3___default","htmlAttributes","titleTemplate","name","content","author","logo","social","twitter","concat","length","join","_public_static_d_2838703103_json__WEBPACK_IMPORTED_MODULE_0__","defaultProps","array","arrayOf","ProdPageRenderer","pageResources","InternalPageRenderer","json","shape"],"mappings":"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","file":"component---src-pages-404-js-33f59a073eaaab22c3df.js","sourcesContent":["import React from 'react'\n\nimport Layout from '../components/Layout'\nimport SEO from '../components/seo'\nimport { redirectTo } from '@reach/router';\n\nclass NotFoundPage extends React.Component {\n  render() {\n    return (\n      <Layout location={this.props.location}>\n        <SEO title=\"404: Not Found\" />\n        <h1>Not Found</h1>\n        <p>You just hit a route that doesn&#39;t exist... the sadness.</p>\n      </Layout>\n    )\n  }\n}\n\nexport default NotFoundPage\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  withAssetPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\n\nconst StaticQueryContext = React.createContext({})\n\nfunction StaticQueryDataRenderer({ staticQueryData, data, query, render }) {\n  const finalData = data\n    ? data.data\n    : staticQueryData[query] && staticQueryData[query].data\n\n  return (\n    <React.Fragment>\n      {finalData && render(finalData)}\n      {!finalData && <div>Loading (StaticQuery)</div>}\n    </React.Fragment>\n  )\n}\n\nconst StaticQuery = props => {\n  const { data, query, render, children } = props\n\n  return (\n    <StaticQueryContext.Consumer>\n      {staticQueryData => (\n        <StaticQueryDataRenderer\n          data={data}\n          query={query}\n          render={render || children}\n          staticQueryData={staticQueryData}\n        />\n      )}\n    </StaticQueryContext.Consumer>\n  )\n}\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withAssetPrefix,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from 'react'\nimport { Link } from 'gatsby'\nimport './layout.css'\nimport { rhythm, scale } from '../utils/typography'\n\nclass Layout extends React.Component {\n  render() {\n    const { location, title, children } = this.props\n    const rootPath = `${__PATH_PREFIX__}/`\n    let header\n\n    if (location.pathname === rootPath) {\n      header = (\n        <h1\n          style={{\n            ...scale(1.5),\n            marginBottom: rhythm(1.5),\n            marginTop: 0,\n          }}\n        >\n          <Link\n            style={{\n              boxShadow: `none`,\n              textDecoration: `none`,\n              color: `inherit`,\n            }}\n            to={`/`}\n          >\n            {title}\n          </Link>\n        </h1>\n      )\n    } else {\n      header = (\n        <h3\n          style={{\n            // fontFamily: `Montserrat, sans-serif`,\n            marginTop: 0,\n            marginBottom: rhythm(-1),\n          }}\n        >\n          <Link to={`/`}>\n            {title}\n          </Link>\n        </h3>\n      )\n    }\n    return (\n      <div className=\"wrapper\">\n        {header}\n        {children}\n        <footer style={{display: 'flex', justifyContent: 'space-between', flexWrap: 'wrap'}}>\n          <span style={{marginBottom: '10px'}}>\n          © {new Date().getFullYear()}, Built with\n          &nbsp;\n          <a href=\"https://www.gatsbyjs.org\">Gatsby</a>,\n          &nbsp;\n          <a href=\"https://www.youtube.com/watch?v=HEXWRTEbj1I\">Love</a>,\n          and <a href=\"https://cameronsworld.net\">Inter-webs</a>.\n          &nbsp;\n          ...<a href=\"https://teespring.com/stores/tech-jr-store\">Buy somethin', will ya?</a>\n          </span>\n          {location.pathname !== rootPath &&\n            <span>\n              <Link to=\"/\">Home</Link>\n            </span>\n          }\n        </footer>\n      </div>\n    )\n  }\n}\n\nexport default Layout\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport Helmet from 'react-helmet'\nimport { StaticQuery, graphql } from 'gatsby'\n\nfunction SEO({\n  description,\n  lang = 'en',\n  meta = [],\n  keywords = [],\n  title,\n  twitterImageUrl,\n  twitterImageAltText\n}) {\n  return (\n    <StaticQuery\n      query={detailsQuery}\n      render={data => {\n        const metaDescription =\n          description || data.site.siteMetadata.description\n        return (\n          <Helmet\n            htmlAttributes={{\n              lang,\n            }}\n            title={title}\n            titleTemplate={title === data.site.siteMetadata.title ? title : `%s | ${data.site.siteMetadata.title}`}\n            meta={[\n              {\n                name: `author`,\n                content: data.site.siteMetadata.author,\n              },\n              {\n                name: `description`,\n                content: metaDescription,\n              },\n              {\n                name: `og:title`,\n                content: title,\n              },\n              {\n                name: `og:description`,\n                content: metaDescription,\n              },\n              {\n                name: `og:type`,\n                content: `website`,\n              },\n              {\n                name: `og:image`,\n                content: twitterImageUrl || data.site.siteMetadata.logo,\n              },\n              {\n                name: `twitter:image`,\n                content: twitterImageUrl || data.site.siteMetadata.logo,\n              },\n              {\n                name: `twitter:alt:image`,\n                content: twitterImageAltText || `Buddhist enso swirl logo`,\n              },\n              {\n                name: `twitter:card`,\n                content: twitterImageUrl ? `summary_large_image` : `summary`,\n              },\n              {\n                name: `twitter:creator`,\n                content: data.site.siteMetadata.social.twitter,\n              },\n              {\n                name: `twitter:site`,\n                content: data.site.siteMetadata.social.twitter,\n              },\n              {\n                name: `twitter:title`,\n                content: title,\n              },\n              {\n                name: `twitter:description`,\n                content: metaDescription,\n              },\n            ].concat(\n                keywords.length > 0\n                  ? {\n                      name: `keywords`,\n                      content: keywords.join(`, `),\n                    }\n                  : {\n                      name: `keywords`,\n                      content: 'blog, web development, developer, front-end developer'\n                    }\n              )\n              .concat(meta)}\n          />\n        )\n      }}\n    />\n  )\n}\n\nSEO.defaultProps = {\n  lang: `en`,\n  meta: [],\n  keywords: [],\n}\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.array,\n  keywords: PropTypes.arrayOf(PropTypes.string),\n  title: PropTypes.string.isRequired,\n}\n\nexport default SEO\n\nconst detailsQuery = graphql`\n  query DefaultSEOQuery {\n    site {\n      siteMetadata {\n        title\n        description\n        author\n        logo\n        social {\n          twitter\n        }\n      }\n    }\n  }\n`\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\n\nconst ProdPageRenderer = ({ location, pageResources }) => {\n  if (!pageResources) {\n    return null\n  }\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n"],"sourceRoot":""}