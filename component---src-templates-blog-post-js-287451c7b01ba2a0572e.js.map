{"version":3,"sources":["webpack:///./src/templates/blog-post.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./src/utils/typography.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/Layout.js","webpack:///./src/components/seo.js","webpack:///./src/components/Bio.js"],"names":["BlogPostTemplate","render","post","this","props","data","mdx","siteTitle","site","siteMetadata","title","_this$props$pageConte","pageContext","previous","next","react__WEBPACK_IMPORTED_MODULE_5___default","a","createElement","_components_Layout__WEBPACK_IMPORTED_MODULE_9__","location","_components_seo__WEBPACK_IMPORTED_MODULE_10__","frontmatter","description","excerpt","style","_objectSpread","scale","display","marginBottom","rhythm","marginTop","date","gatsby_mdx_mdx_renderer__WEBPACK_IMPORTED_MODULE_7___default","code","body","_components_Bio__WEBPACK_IMPORTED_MODULE_8__","flexWrap","justifyContent","listStyle","padding","gatsby__WEBPACK_IMPORTED_MODULE_6__","to","fields","slug","rel","React","Component","pageQuery","__webpack_require__","d","__webpack_exports__","StaticQuery","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","StaticQueryContext","createContext","StaticQueryDataRenderer","_ref","staticQueryData","query","finalData","Fragment","children","Consumer","propTypes","PropTypes","object","string","isRequired","func","typography__WEBPACK_IMPORTED_MODULE_0__","typography__WEBPACK_IMPORTED_MODULE_0___default","typography_theme_wordpress_2016__WEBPACK_IMPORTED_MODULE_1__","typography_theme_wordpress_2016__WEBPACK_IMPORTED_MODULE_1___default","Wordpress2016","overrideThemeStyles","a.gatsby-resp-image-link","boxShadow","googleFonts","typography","Typography","m","module","exports","require","default","ProdPageRenderer","pageResources","InternalPageRenderer","json","shape","pathname","Layout","header","_this$props","textDecoration","color","fontFamily","marginLeft","marginRight","maxWidth","Date","getFullYear","href","SEO","lang","meta","keywords","react__WEBPACK_IMPORTED_MODULE_1___default","gatsby__WEBPACK_IMPORTED_MODULE_4__","detailsQuery","metaDescription","react_helmet__WEBPACK_IMPORTED_MODULE_3___default","htmlAttributes","titleTemplate","name","content","property","author","concat","length","join","_public_static_d_1025518380_json__WEBPACK_IMPORTED_MODULE_0__","defaultProps","array","arrayOf","bioQuery","Bio","react__WEBPACK_IMPORTED_MODULE_2___default","gatsby__WEBPACK_IMPORTED_MODULE_3__","_data$site$siteMetada","social","gatsby_image__WEBPACK_IMPORTED_MODULE_4___default","fixed","avatar","childImageSharp","alt","minWidth","borderRadius","twitter","_public_static_d_4007731267_json__WEBPACK_IMPORTED_MODULE_1__"],"mappings":"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","file":"component---src-templates-blog-post-js-287451c7b01ba2a0572e.js","sourcesContent":["import React from 'react'\nimport { Link, graphql } from 'gatsby'\nimport MDXRenderer from 'gatsby-mdx/mdx-renderer'\n\nimport Bio from '../components/Bio'\nimport Layout from '../components/Layout'\nimport SEO from '../components/seo'\nimport { rhythm, scale } from '../utils/typography'\n\nclass BlogPostTemplate extends React.Component {\n  render() {\n    const post = this.props.data.mdx\n    const siteTitle = this.props.data.site.siteMetadata.title\n    const { previous, next } = this.props.pageContext\n\n    return (\n      <Layout location={this.props.location} title={siteTitle}>\n        <SEO title={post.frontmatter.title} description={post.excerpt} />\n        <h1>{post.frontmatter.title}</h1>\n        <p\n          style={{\n            ...scale(-1 / 5),\n            display: `block`,\n            marginBottom: rhythm(1),\n            marginTop: rhythm(-1),\n          }}\n        >\n          {post.frontmatter.date}\n        </p>\n        <MDXRenderer>{post.code.body}</MDXRenderer>\n        <hr\n          style={{\n            marginBottom: rhythm(1),\n          }}\n        />\n        <Bio />\n\n        <ul\n          style={{\n            display: `flex`,\n            flexWrap: `wrap`,\n            justifyContent: `space-between`,\n            listStyle: `none`,\n            padding: 0,\n          }}\n        >\n          <li>\n            {previous && (\n              <Link to={previous.fields.slug} rel=\"prev\">\n                ← {previous.frontmatter.title}\n              </Link>\n            )}\n          </li>\n          <li>\n            {next && (\n              <Link to={next.fields.slug} rel=\"next\">\n                {next.frontmatter.title} →\n              </Link>\n            )}\n          </li>\n        </ul>\n      </Layout>\n    )\n  }\n}\n\nexport default BlogPostTemplate\n\nexport const pageQuery = graphql`\n  query($slug: String!) {\n    site {\n      siteMetadata {\n        title\n        author\n      }\n    }\n    mdx(fields: { slug: { eq: $slug } }) {\n      id\n      excerpt(pruneLength: 160)\n      frontmatter {\n        title\n        date(formatString: \"MMMM DD, YYYY\")\n      }\n      code {\n        body\n      }\n    }\n  }\n`\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  withAssetPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\n\nconst StaticQueryContext = React.createContext({})\n\nfunction StaticQueryDataRenderer({ staticQueryData, data, query, render }) {\n  const finalData = data\n    ? data.data\n    : staticQueryData[query] && staticQueryData[query].data\n\n  return (\n    <React.Fragment>\n      {finalData && render(finalData)}\n      {!finalData && <div>Loading (StaticQuery)</div>}\n    </React.Fragment>\n  )\n}\n\nconst StaticQuery = props => {\n  const { data, query, render, children } = props\n\n  return (\n    <StaticQueryContext.Consumer>\n      {staticQueryData => (\n        <StaticQueryDataRenderer\n          data={data}\n          query={query}\n          render={render || children}\n          staticQueryData={staticQueryData}\n        />\n      )}\n    </StaticQueryContext.Consumer>\n  )\n}\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withAssetPrefix,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n}\n","import Typography from 'typography'\nimport Wordpress2016 from 'typography-theme-wordpress-2016'\n\nWordpress2016.overrideThemeStyles = () => {\n  return {\n    'a.gatsby-resp-image-link': {\n      boxShadow: `none`,\n    },\n  }\n}\n\ndelete Wordpress2016.googleFonts\n\nconst typography = new Typography(Wordpress2016)\n\n// Hot reload typography in development.\nif (process.env.NODE_ENV !== `production`) {\n  typography.injectStyles()\n}\n\nexport default typography\nexport const rhythm = typography.rhythm\nexport const scale = typography.scale\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\n\nconst ProdPageRenderer = ({ location, pageResources }) => {\n  if (!pageResources) {\n    return null\n  }\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","import React from 'react'\nimport { Link } from 'gatsby'\n\nimport { rhythm, scale } from '../utils/typography'\n\nclass Layout extends React.Component {\n  render() {\n    const { location, title, children } = this.props\n    const rootPath = `${__PATH_PREFIX__}/`\n    let header\n\n    if (location.pathname === rootPath) {\n      header = (\n        <h1\n          style={{\n            ...scale(1.5),\n            marginBottom: rhythm(1.5),\n            marginTop: 0,\n          }}\n        >\n          <Link\n            style={{\n              boxShadow: `none`,\n              textDecoration: `none`,\n              color: `inherit`,\n            }}\n            to={`/`}\n          >\n            {title}\n          </Link>\n        </h1>\n      )\n    } else {\n      header = (\n        <h3\n          style={{\n            fontFamily: `Montserrat, sans-serif`,\n            marginTop: 0,\n            marginBottom: rhythm(-1),\n          }}\n        >\n          <Link\n            style={{\n              boxShadow: `none`,\n              textDecoration: `none`,\n              color: `inherit`,\n            }}\n            to={`/`}\n          >\n            {title}\n          </Link>\n        </h3>\n      )\n    }\n    return (\n      <div\n        style={{\n          marginLeft: `auto`,\n          marginRight: `auto`,\n          maxWidth: rhythm(24),\n          padding: `${rhythm(1.5)} ${rhythm(3 / 4)}`,\n        }}\n      >\n        {header}\n        {children}\n        <footer>\n          © {new Date().getFullYear()}, Built with\n          {` `}\n          <a href=\"https://www.gatsbyjs.org\">Gatsby</a>\n        </footer>\n      </div>\n    )\n  }\n}\n\nexport default Layout\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport Helmet from 'react-helmet'\nimport { StaticQuery, graphql } from 'gatsby'\n\nfunction SEO({ description, lang, meta, keywords, title }) {\n  return (\n    <StaticQuery\n      query={detailsQuery}\n      render={data => {\n        const metaDescription =\n          description || data.site.siteMetadata.description\n        return (\n          <Helmet\n            htmlAttributes={{\n              lang,\n            }}\n            title={title}\n            titleTemplate={`%s | ${data.site.siteMetadata.title}`}\n            meta={[\n              {\n                name: `description`,\n                content: metaDescription,\n              },\n              {\n                property: `og:title`,\n                content: title,\n              },\n              {\n                property: `og:description`,\n                content: metaDescription,\n              },\n              {\n                property: `og:type`,\n                content: `website`,\n              },\n              {\n                name: `twitter:card`,\n                content: `summary`,\n              },\n              {\n                name: `twitter:creator`,\n                content: data.site.siteMetadata.author,\n              },\n              {\n                name: `twitter:title`,\n                content: title,\n              },\n              {\n                name: `twitter:description`,\n                content: metaDescription,\n              },\n            ]\n              .concat(\n                keywords.length > 0\n                  ? {\n                      name: `keywords`,\n                      content: keywords.join(`, `),\n                    }\n                  : []\n              )\n              .concat(meta)}\n          />\n        )\n      }}\n    />\n  )\n}\n\nSEO.defaultProps = {\n  lang: `en`,\n  meta: [],\n  keywords: [],\n}\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.array,\n  keywords: PropTypes.arrayOf(PropTypes.string),\n  title: PropTypes.string.isRequired,\n}\n\nexport default SEO\n\nconst detailsQuery = graphql`\n  query DefaultSEOQuery {\n    site {\n      siteMetadata {\n        title\n        description\n        author\n      }\n    }\n  }\n`\n","import React from 'react'\nimport { StaticQuery, graphql } from 'gatsby'\nimport Image from 'gatsby-image'\n\nimport { rhythm } from '../utils/typography'\n\nfunction Bio() {\n  return (\n    <StaticQuery\n      query={bioQuery}\n      render={data => {\n        const { author, social } = data.site.siteMetadata\n        return (\n          <div\n            style={{\n              display: `flex`,\n              marginBottom: rhythm(2.5),\n            }}\n          >\n            <Image\n              fixed={data.avatar.childImageSharp.fixed}\n              alt={author}\n              style={{\n                marginRight: rhythm(1 / 2),\n                marginBottom: 0,\n                minWidth: 50,\n                borderRadius: `100%`,\n              }}\n            />\n            <p>\n              Written by <strong>{author}</strong> who lives and works in\n              Minneapolis building silly things.\n              {` `}\n              <a href={`https://twitter.com/${social.twitter}`}>\n                You should follow him on Twitter\n              </a>\n            </p>\n          </div>\n        )\n      }}\n    />\n  )\n}\n\nconst bioQuery = graphql`\n  query BioQuery {\n    avatar: file(absolutePath: { regex: \"/profile-pic.jpg/\" }) {\n      childImageSharp {\n        fixed(width: 50, height: 50) {\n          ...GatsbyImageSharpFixed\n        }\n      }\n    }\n    site {\n      siteMetadata {\n        author\n        social {\n          twitter\n        }\n      }\n    }\n  }\n`\n\nexport default Bio\n"],"sourceRoot":""}